<?php defined( '_JEXEC' ) or die( 'Restricted access' ); jimport( 'joomla.application.component.controller' ); class ReferidosControllerRenuevaPlan extends JController{		/**	* metodo para comprobar el estado del plan de los usuarios	*	*/	public function renovacionPlan(){				$model_user = $this->getModel( 'user' );		$users = $model_user->getObjects();		$Utilities = 'Misc';				/**		* compruebo el estado vencido de los planes de los usuarios		*/		if( count($users) )		{			foreach( $users as $key=>$user ){								//obtengo la otra informacion del suario				$inf_user = $user->getUserInf();				if( !empty($inf_user) ){					foreach( $inf_user as $attr=>$valor){						$user->$attr = $valor;					}					unset($valor);				}								$wheres_plan = array(					0 => (object) array(							'key' => '( a.estado_plan'						,	'condition' => ' = '						,	'value' => '2  AND DATE_ADD( a.fecha_vencio , INTERVAL 30 DAY ) >= CURDATE() )								OR ( a.estado_plan = 1 AND DATE_SUB( a.fecha_vence , INTERVAL 30 DAY ) <= CURDATE() )								'						,	'glue' => ''					)				);				$planes_user = $user->getUserPlanes( $wheres_plan );				/*				* a los planes que no llevan mas de 30 dias despues de la fecha				* de vencimiento envio correo al usuario para renovacion de plan				* y los que estan a 30 dias de vencer igual				*/				if( count($planes_user) )				{					foreach( $planes_user as $pos=>$plan ){						$model_plan = $this->getModel( 'plan' );						$model_plan->instance( (int) $plan->id_plan  );												$params_mailrenueva = array(								'planuser' => $plan->id_user_plan							,	'userid' => $user->userid							,	'emailuser' => $user->email							,	'nameuser' => $user->name.' '.$user->apellidos							,	'thumb' => $user->thumb						);						if( isset($user->email) && $Utilities::verificarEmail($user->email) )							$model_plan->sendMailRenovacionPlan( $params_mailrenueva );					}					unset($plan);				}							}			unset($user);		}				return;	}		/**	* compruebar los planes para consultar la fecha de vencimiento	*/	public function planesVence(){				$model_userplan = $this->getModel( 'userplan' );				//compruebo los planes que ya vencieron		$wheres = array(			0 => ( object ) array(					'key' => 'estado_plan'				,	'condition' => ' = '				,	'valor' => '1'				,	'glue' => 'AND'			)			,			1 => ( object ) array(					'key' => 'fecha_vence'				,	'condition' => ' <= '				,	'valor' => date( 'Y-m-d H:m:i' )				,	'glue' => ''			)		);		$planes_user = $model_userplan->getObjects( $wheres );				if( count($planes_user) ){			foreach( $planes_user as $key=>$plan){								$model_planuser_up = $this->getModel( 'userplan' );				$args_up = array(						'id_user_plan' => $plan->id_user_plan					,	'estado_plan' => '2'					,	'fecha_vencio' => date( 'Y-m-d H:m:i' )				);				$model_planuser_up->instance( $args_up );								if( $model_planuser_up->save( 'bool' ) ){										/*obtengo los referidos del plan que no han comisionado					* y los pongo en estado inactivo para comision					*/					$model_referido = $this->getModel( 'referido' );										$wheres_ref = array(						0 => (object) array(								'key' => 'id_user_plan'							,	'condition' => ' = '							,	'value' => $plan->id_user_plan							,	'glue' => 'AND'						)						,						1 => (object) array(								'key' => 'forcomision'							,	'condition' => ' = '							,	'value' => '0'							,	'glue' => ''						)					);					$referidos = $model_referido->getObjects( $wheres_ref );										if( count($referidos) ){						foreach( $referidos as $pos=>$ref ){							$model_ref = $this->getModel( 'referido' );							$args_up = array(									'id_referidos_user' => $ref->id_referidos_user								,	'estado_ref' => '0'							);							$model_ref->instance( $args_up );							$model_ref->save();						}						unset( $ref );					}									}							}			unset( $plan );		}				return;	}}