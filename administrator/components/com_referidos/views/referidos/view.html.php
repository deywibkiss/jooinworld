<?php// No direct access to this filedefined('_JEXEC') or die('Restricted access'); // import Joomla view libraryjimport('joomla.application.component.view'); /** * HTML View class for the HelloWorld Component */class ReferidosViewReferidos extends JView{				private $model_referido;		protected $items;		protected $itemsall;		        // Overwriting JView display method        function display($tpl = null)         {                // Assign data to the view                $this->model_referido = new ReferidosModelReferido();                 // Check for errors.                if (count($errors = $this->get('Errors')))                 {                        JError::raiseError(500, implode('<br />', $errors));                        return false;                }								//agregar toolbar				$this->addToolBar();								//obtener los referidos				$this->getReferidos();				                // Display the view                parent::display($tpl);        }				/**		 * Add the page title and toolbar.		 *		 * @since	1.6		 */		protected function addToolbar()		{			$canDo  = ReferidosHelper::getActions();						JToolBarHelper::title( 'GestiÃ³n Referidos : Referidos' , 'referidos');			/*if ($canDo->get('core.delete')) {				JToolBarHelper::deleteList( 'Desea eliminar estos Usuarios?' ,'invitado.delete' , "Eliminar Items");			}						if ($canDo->get('core.edit.state')) {				JToolBarHelper::publish('users.activate');				JToolBarHelper::unpublish('users.block');			}*/			JToolBarHelper::back( "Devolver" );		}				/**		 * Obtener los Referidos		 *		 * @since	1.6		 */		protected function getReferidos()		{			$refirio = JRequest::getInt( 'refirio' );			$limit = JRequest::getVar( 'limit' , 10 );			$limitstart = JRequest::getVar( 'limitstart' , '');						$wheres_referido = array();			$ids_userplan_ref = array();						/**			* si se resive el id del usuario que invita			* se realizan las respectivas consultas			*/			if( !empty($refirio) ){				$wheres_user = array(					0 => (object) array(							'key' => 'id_user'						,	'condition' => ' = '						,	'value' => $refirio						,	'glue' => 'AND'					)					,					1 => (object) array(							'key' => 'estado_plan'						,	'condition' => ' <> '						,	'value' => '0'						,	'glue' => ''					)				);				$model_up_ref = new ReferidosModelUserPlan();				$userplanes_ref = $model_up_ref->getObjects($wheres_user);								foreach( $userplanes_ref as $pos=>$up_ref){					$ids_userplan_ref[] = $up_ref->id_user_plan;				}				unset($up_ref);								$wheres_referido = array(					0 => (object) array(							'key' => 'id_user_plan'						,	'condition' => ' IN '						,	'value' => '('.implode( ',' , $ids_userplan_ref).')'						,	'glue' => ''					)				);			}						//obtengo todos los resgistros sin aplicar el filtro del paginado			$this->itemsall = $this->model_referido->getObjects( $wheres_referido );						$prlimits = array();			if( is_numeric( $limit ) ){				$prlimits = array(						'limitstart' => $limitstart					,	'limit' => $limit				);			}						$this->items = $this->model_referido->getObjects( $wheres_referido , $prlimits);						//obtener los demas datos del referido			if( count($this->items) ){				foreach( $this->items as $key=>$referido){										//datos del referido					$ref_inf = $referido->getReferidoInf();					if( count($ref_inf) ){						foreach( $ref_inf as $attr=>$valor ){							$this->items[$key]->$attr = $valor;						}						unset( $valor );					}										//Obtengo datos de quien lo refiere directamente					$model_dir_user = new ReferidosModelUser();					$model_dir_user->instance( (int) $referido->id_referido_por );					$diruser_inf = $model_dir_user->getUserInf();					if( !empty($diruser_inf) ){						foreach( $diruser_inf as $attr=>$valor ){							$model_dir_user->$attr = $valor;						}						unset( $valor );					}					$this->items[ $key ]->refdirecto = $model_dir_user;										//obtengo los datos del plan del usuario en que quedo asociado					$model_userplan_ref = new ReferidosModelUserplan();					$model_userplan_ref->instance( (int) $referido->id_user_plan );										$model_plan_asoc = new ReferidosModelPlan();					$model_plan_asoc->instance( $model_userplan_ref->id_plan );					$this->items[$key]->plan_ref = $model_plan_asoc;										$model_ref_user = new ReferidosModelUser(); 					$model_ref_user->instance( $model_userplan_ref->id_user );					$refuser_inf = $model_ref_user->getUserInf();					if( count($refuser_inf) ){						foreach( $refuser_inf as $attr=>$valor ){							$model_ref_user->$attr = $valor;						}						unset( $valor );					}										$this->items[$key]->refuser = $model_ref_user;									}				unset( $referido );			}		}}