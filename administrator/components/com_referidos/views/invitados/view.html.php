<?php// No direct access to this filedefined('_JEXEC') or die('Restricted access'); // import Joomla view libraryjimport('joomla.application.component.view'); /** * HTML View class for the HelloWorld Component */class ReferidosViewInvitados extends JView{			private $model_invt;		protected $items;		protected $itemsall;		        //Overwriting JView display method        function display($tpl = null)         {                // Assign data to the view                $this->model_invt = new ReferidosModelInvitado();                 // Check for errors.                if (count($errors = $this->get('Errors')))                 {                        JError::raiseError(500, implode('<br />', $errors));                        return false;                }								//agregar toolbar				$this->addToolBar();								//obtener los invitados				$this->getInvitados();				                // Display the view                parent::display($tpl);        }				/**		 * Add the page title and toolbar.		 *		 * @since	1.6		 */		protected function addToolbar()		{			$canDo  = ReferidosHelper::getActions();						JToolBarHelper::title( 'GestiÃ³n Referidos : Invitados' , 'invitados');			/*if ($canDo->get('core.delete')) {				JToolBarHelper::deleteList( 'Desea eliminar estos Usuarios?' ,'invitado.delete' , "Eliminar Items");			}						if ($canDo->get('core.edit.state')) {				JToolBarHelper::publish('users.activate');				JToolBarHelper::unpublish('users.block');			}*/			JToolBarHelper::back( "Devolver" );		}				/**		 * Obtener los Invitados		 *		 * @since	1.6		 */		protected function getInvitados()		{			$invito = JRequest::getInt( 'invito' );			$limit = JRequest::getVar( 'limit' , 10 );			$limitstart = JRequest::getVar( 'limitstart' , '');						//var_dump( $limit , $limitstart);						$wheres = array();						if( !empty( $invito ) ){				$wheres[] = (object) array(						'key' => 'id_user'					,	'condition' => ' = '					,	'value' => $invito					,	'glue' => ''				);			}			else{				$wheres[] = (object) array(						'key' => ' 1'					,	'condition' => ''					,	'value' => ''					,	'glue' => ''				);			}						array_push( $wheres , 					(object) array(							'key' => ' GROUP BY'						,	'condition' => ' correo_invt, id_facebook '						,	'value' => ''						,	'glue' => ''					)					,					(object) array(							'key' => 'ORDER BY'						,	'condition' => ' fecha_invt DESC'						,	'value' => ''						,	'glue' => ''					)			);						//obtengo todos los resgistros sin aplicar el filtro del paginado			$this->itemsall = $this->model_invt->getObjects( $wheres );						$prlimits = array();			if( is_numeric( $limit ) ){				$prlimits = array(						'limitstart' => $limitstart					,	'limit' => $limit				);			}						$this->items = $this->model_invt->getObjects( $wheres , $prlimits );						//obtengo el mobre de la persona que invito			if( count($this->items) ){								foreach( $this->items as $key=>$invitado ){					//instancia del usuario que invito					$model_user = new ReferidosModelUser();										$model_user->instance( (int) $invitado->id_user );					$inf_user = $model_user->getUserInf();					if( count($inf_user) ){						foreach( $inf_user as $attr=>$valor ){							$model_user->$attr = $valor;						}						unset( $valor );					}										$this->items[ $key ]->userinvito = $model_user;										//instancia del plan con que se invito					$model_plan = new ReferidosModelPlan();										$model_plan->instance( (int) $invitado->plan_invt );					$this->items[ $key ]->planinvito = $model_plan;				}				unset($invitado);			}		}}