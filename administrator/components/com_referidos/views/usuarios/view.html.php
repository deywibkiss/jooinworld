<?php// No direct access to this filedefined('_JEXEC') or die('Restricted access'); // import Joomla view libraryjimport('joomla.application.component.view'); /** * HTML View class for the HelloWorld Component */class ReferidosViewUsuarios extends JView{				private $model_user;		protected $items = array();		protected $itemsall = array();		        // Overwriting JView display method        function display($tpl = null)         {                // Assign data to the view                $this->model_user = new ReferidosModelUser();                 // Check for errors.                if (count($errors = $this->get('Errors')))                 {                        JError::raiseError(500, implode('<br />', $errors));                        return false;                }				//agregar toolbar				$this->addToolBar();								//obtengo datos de usuario				$this->getUsers();				                // Display the view                parent::display($tpl);        }				/**		 * Add the page title and toolbar.		 *		 * @since	1.6		 */		protected function addToolbar()		{			$canDo  = ReferidosHelper::getActions();						JToolBarHelper::title( 'Gestión Referidos : Usuarios - Planes' , 'usuarios');			/*if ($canDo->get('core.delete')) {				JToolBarHelper::deleteList( 'Desea eliminar estos Invitados?' ,'user.delete' , "Eliminar Items");			}						if ($canDo->get('core.edit.state')) {				JToolBarHelper::publish('users.activate');				JToolBarHelper::unpublish('users.block');			}*/		}				/**		* obtengo todos los datos de los usuarios		*		*/		protected function getUsers(){						//obtengo todos los usuarios			$filter_search = JRequest::getVar( 'filter_search' );			$limit = JRequest::getVar( 'limit' , 10 );			$limitstart = JRequest::getVar( 'limitstart' , '');						$this->itemsall = $this->model_user->getObjects();						$prlimits = array();			if( is_numeric( $limit ) ){				$prlimits = array(						'limitstart' => $limitstart					,	'limit' => $limit				);			}						$users_jw = $this->model_user->getObjects( array() , $prlimits );									if( count($users_jw) ){				//agrego informacion adicional para todos los usuarios				$pos_user = 0;				foreach( $users_jw as $key=>$user ){										$model_user = new ReferidosModelUser();					$model_user->instance( (int) $user->userid );										$wheres_user = array();					if( isset($filter_search) ){						$wheres_user[] = (object) array(													'key' => ' ( name'												,	'condition' => ' LIKE '												,	'value' => "'%$filter_search%' OR email LIKE '%$filter_search%')"												,	'glue' => ''											);					}										$user_inf = $model_user->getUserInf( $wheres_user );										//var_dump( $user_inf );										$wheres_planes = array(						0 => (object) array(								'key' => 'a.estado_plan'							,	'condition' => ' <> '							,	'value' => '0'							,	'glue' => ''						)					);					$params_user = array(						'order' => 'fecha_adquiere DESC'					);					$user_planes = $model_user->getUserPlanes( $wheres_planes , $params_user);										//var_dump( $user_planes );										//compruebo si el filtro de plan es aplicado					$app = JFactory::getApplication();					$filterplan = $app->getUserState( 'filter.referidos.user.id_plan' );					$pasa_plan = true;					if( empty($user_planes) && $filterplan != '')						$pasa_plan = false;										if( !empty($user_inf) && $pasa_plan ){												$this->items[ $pos_user ] = $user;												//obtener información adicional						if( count($user_inf) ){							foreach( $user_inf as $attr=>$valor ){								$this->items[ $pos_user ]->$attr = $valor;							}							unset($valor);						}												//obtener planes de usuario						$this->items[ $pos_user ]->planes = $user_planes;												//obtener invitados por usuario						$model_invt = new ReferidosModelInvitado();						$wheres_invt = array(							0 => (object) array(									'key' => 'id_user'								,	'condition' => ' = '								,	'value' => $user->id								,	'glue' => ''							)							,							1 => (object) array(									'key' => ' GROUP BY'								,	'condition' => ' correo_invt, id_facebook '								,	'value' => ''								,	'glue' => ''							)							,							2 => (object) array(									'key' => 'ORDER BY'								,	'condition' => ' fecha_invt DESC'								,	'value' => ''								,	'glue' => ''							)						);						$invt_user = $model_invt->getObjects( $wheres_invt );						$this->items[ $pos_user ]->invitados = $invt_user;												//obtener referidos por usuario						$referidos_user = array();						if( count($user_planes) ){							foreach( $user_planes as $pos=>$plan){																$wheres_ref = array(									0 => (object) array(											'key' => 'id_user_plan'										,	'condition' => ' = '										,	'value' => $plan->id_user_plan										,	'glue' => 'AND'									)								);								$model_ref = new ReferidosModelReferido();								$referidos = $model_ref->getObjects( $wheres_ref );																if( is_array($referidos) )									$referidos_user = array_merge( $referidos_user , $referidos);							}							unset($plan);						}												$this->items[ $pos_user ]->referidos = $referidos_user;					}					$pos_user++;				}				unset($user);			}		}				/**		 * Method to render the select option of available plan		 *		 */		protected function selectPlan( $idplan = "" ){						$model_plan = new ReferidosModelPlan();			$options = array();					$ops_null = array( 0 => (object)array( 'id_plan' => '', 'nom_plan' => '-- Seleccione Plan --' ) );			$estados = $model_plan->getObjects();			$estados = array_merge( $ops_null , $estados );					foreach ( $estados as $estado ):						$options[] = JHTML::_( 'select.option', $estado->id_plan , $estado->nom_plan );					endforeach;							echo JHTML::_('select.genericlist', $options, "id_plan", 'class="" onchange="Joomla.submitbutton(\'user.buscar\')"','value','text', $idplan );				}}