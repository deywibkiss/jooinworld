<?php// No direct access to this filedefined('_JEXEC') or die('Restricted access'); // import Joomla view libraryjimport('joomla.application.component.view'); /** * HTML View class for the HelloWorld Component */class ReferidosViewComisiones extends JView{		private $model_comision;		protected $items;		protected $itemsall;		protected $comision_excel;		        // Overwriting JView display method        function display($tpl = null)         {                // Assign data to the view                $this->model_comision = new ReferidosModelComisionGeneral();				                // Check for errors.                if (count($errors = $this->get('Errors')))                 {                        JError::raiseError(500, implode('<br />', $errors));                        return false;                }								$view		= JRequest::getCmd('view', 'comisiones');				$layout 	= JRequest::getCmd('layout', 'default');				$id			= JRequest::getInt('id');								if( $view == 'comisiones' && $this->getLayout() == 'generarpagos'){								header('Content-type: application/vnd.ms-excel; name="excel"');					header("Content-Disposition: attachment; filename=pqrs_".time().".xls");					header("Pragma: no-cache");					header("Expires: 0"); 															parent::display( $tpl );					die();				}								//agregar toolbar				$this->addToolBar();								//obtengo las comisiones				$this->getComisiones();				                // Display the view                parent::display($tpl);        }				/**		 * Add the page title and toolbar.		 *		 * @since	1.6		 */		protected function addToolbar()		{			$canDo  = ReferidosHelper::getActions();						JToolBarHelper::title( 'Gestión Referidos : Comisión' , 'comisiones');			/*if ($canDo->get('core.delete')) {				JToolBarHelper::deleteList( 'Desea eliminar estos Invitados?' ,'user.delete' , "Eliminar Items");			}						if ($canDo->get('core.edit.state')) {				JToolBarHelper::publish('users.activate');				JToolBarHelper::unpublish('users.block');			}*/		}				/**		* obtengo todos los registros de comisiones		*		*/		protected function getComisiones(){						$limit = JRequest::getVar( 'limit' , 10 );			$limitstart = JRequest::getVar( 'limitstart' , '');						//obtengo todos los resgistros sin aplicar el filtro del paginado			$this->itemsall = $this->model_comision->getObjects();						$prlimits = array();			if( is_numeric( $limit ) ){				$prlimits = array(						'limitstart' => $limitstart					,	'limit' => $limit				);			}						$this->items = $this->model_comision->getObjects( array() , $prlimits );					}		/*protected function getComisiones(){						$this->items = $this->model_comision->getObjects();						//obtener los demas datos			if( count($this->items) ){								foreach( $this->items as $key=>$comision ){										$model_user_plan = new ReferidosModelUserPlan();					$model_user_plan->instance( (int) $comision->id_user_plan );										//obtengo los datos del plan de la comision					$model_plan = new ReferidosModelPlan( (int) $model_user_plan->id_plan );					if( count($model_plan) ){						foreach( $model_plan as $attr=>$valor ){							$model_user_plan->$attr = $valor;						}					}										$this->items[ $key ]->planuser = $model_user_plan;										//obtengo los datos del usuario de la comision					$model_user = new ReferidosModelUser();					$model_user->instance( (int) $model_user_plan->id_user );					$user_inf = $model_user->getUserInf();										if( count($user_inf) ){						foreach( $user_inf as $attr=>$valor ){							$model_user->$attr = $valor;						}					}										$this->items[ $key ]->user = $model_user;				}				}		}*/}