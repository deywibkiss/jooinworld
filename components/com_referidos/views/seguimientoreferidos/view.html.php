<?php// No direct access to this filedefined('_JEXEC') or die('Restricted access'); // import Joomla view libraryjimport('joomla.application.component.view'); /** * HTML View class for the Referidos Component */class ReferidosViewSeguimientoReferidos extends JView{		private $model_referido;		private $model_user;		public $ref_directos = array();		public $ref_indirectos = array();		public $ref_directos_all = array();		public $ref_indirectos_all = array();		public $user_data = array();		protected $vistaref = 1;				// Overwriting JView display method        function display($tpl = null)         {				$user = JFactory::getUser();				$this->model_user = new ReferidosModelUser();				$this->model_user->instance( $user->get( 'id' ) );				                // Check for errors.                if (count($errors = $this->get('Errors')))                 {                        JError::raiseError(500, implode('<br />', $errors));                        return false;                }								//obtengo los datos del usuario				$this->getDataUser();				//obtengo la matriz				$this->miembrosMatriz();				                // Display the view                parent::display($tpl);        }				/**		* obtengo los miembros de la matriz		* return void		*/		protected function miembrosMatriz(){						$user = JFactory::getUser();			$id_plan = JRequest::getVar( 'plan' , '');			$nom_mail = JRequest::getVar( 'nom-mail' , '');			$this->vistaref = JRequest::getVar( 'vistaref' , '1');						$wheres_user = array(				0 => ( object ) array(						'key' => 'a.estado_plan'					,	'condition' => ' <> '					,	'value' => '0'					,	'glue' => ''				)			);						//obtengo una instancia de la clase user			$planes_user = $this->model_user->getUserPlanes( $wheres_user );			$ids_ref_directos = array();			$ids_ref_indirectos = array();						//obtengo todos los referidos de los planes activos del usuario			foreach( $planes_user as $key=>$plan){								//DIRECTOS				$wheres_referido = array(					0 => ( object ) array(							'key' => 'estado_ref'						,	'condition' => ' = '						,	'value' => '1'						,	'glue' => 'AND'					)					,					1 => ( object ) array(							'key' => 'id_user_plan'						,	'condition' => ' = '						,	'value' => $plan->id_user_plan						,	'glue' => 'AND'					)					,					2 => ( object ) array(							'key' => 'directo'						,	'condition' => ' = '						,	'value' => '1'						,	'glue' => ''					)				);								$model_referido = new ReferidosModelReferido();				$referidos_user = $model_referido->getObjects( $wheres_referido );								foreach( $referidos_user as $key=>$ref_user){										$model_ref = new ReferidosModelReferido(); 					$model_ref->instance( $ref_user->id_referidos_user );										//obtengo el resto de la informacion del referido					$inf_ref = $model_ref->getReferidoInf();					foreach( $inf_ref as $key=>$inf ){						$model_ref->$key = $inf;					}					unset($inf);										//obtengo los planes del referido					$planes_ref = $model_ref->getReferidoPlanes();					foreach( $planes_ref as $key=>$plan_ref){												foreach($plan_ref as $atrr=>$valor){							$model_ref->$atrr = $valor;						}						unset( $valor );											}					unset($plan_ref);										$this->ref_directos_all[] = $model_ref;				}				unset($ref_user);								//INDIRECTOS				$wheres_referido = array(					0 => ( object ) array(							'key' => 'estado_ref'						,	'condition' => ' = '						,	'value' => '1'						,	'glue' => 'AND'					)					,					1 => ( object ) array(							'key' => 'id_user_plan'						,	'condition' => ' = '						,	'value' => $plan->id_user_plan						,	'glue' => 'AND'					)					,					2 => ( object ) array(							'key' => 'directo'						,	'condition' => ' = '						,	'value' => '2'						,	'glue' => ''					)				);								$model_referido2 = new ReferidosModelReferido();				$referidos_user = $model_referido2->getObjects( $wheres_referido );					foreach( $referidos_user as $key=>$ref_user){										$model_ref = new ReferidosModelReferido(); 					$model_ref->instance( $ref_user->id_referidos_user );										//obtengo el resto de la informacion del referido					$inf_ref = $model_ref->getReferidoInf();					foreach( $inf_ref as $key=>$inf ){						$model_ref->$key = $inf;					}					unset($inf);										//obtengo los planes del referido					$planes_ref = $model_ref->getReferidoPlanes();					foreach( $planes_ref as $key=>$plan_ref){												foreach($plan_ref as $attr=>$valor){							$model_ref->$attr = $valor;						}						unset( $valor );											}					unset($plan_ref);										$this->ref_indirectos_all[] = $model_ref;				}				unset($ref_user);			}						//APLICO LOS FILTROS SELECCIONADOS			$offset = 0;			$limit = 5;						//aplicando los filtros a indirectos			foreach( $this->ref_indirectos_all as $key=>$obj ){								if( !( $key >= $offset && $key < $limit ) )					continue;								$filtro = true;								if( !empty( $id_plan ) && $obj->id_plan != $id_plan )					$filtro = false;									if( !empty($nom_mail) && ( strripos( $obj->name , $nom_mail) === false && strripos( $obj->email , $nom_mail) === false  ) )						$filtro = false;								//si cumple los filtros se obtiene el referido				if( $filtro ){					$this->ref_indirectos[] =  $this->ref_indirectos_all[ $key ];				}			}			unset( $obj );						//aplicando los filtros a directos			foreach( $this->ref_directos_all as $key=>$obj ){								if( !( $key >= $offset && $key < $limit ) )					continue;								$filtro = true;								if( !empty( $id_plan ) && $obj->id_plan != $id_plan )					$filtro = false;									if( !empty($nom_mail) && ( strripos( $obj->name , $nom_mail ) === false && strripos( $obj->email , $nom_mail ) === false ) )					$filtro = false;									/*para la vista de arbol deve existir el referido directo 				* para mostrar los indirecto cuando se aplican filtros				*/				foreach( $this->ref_indirectos as $pos=>$indirecto ){					if( ( $obj->userid == $indirecto->id_referido_por ) )						$filtro = true;				}				unset($indirecto);								//si cumple los filtros se obtiene el referido				if( $filtro ){					$this->ref_directos[] =  $this->ref_directos_all[ $key ];				}			}			unset( $obj );		}				/**		* obtener los planes		* @return object		*/		public function planes(){						$user = JFactory::getUser();						$wheres = array(				0 => ( object ) array(						'key' => 'b.estado_activo'					,	'condition' => ' = '					,	'value' => '1'					,	'glue' => 'AND'					)				,				1 => ( object ) array(						'key' => 'a.estado_plan'					,	'condition' => ' <> '					,	'value' => '0 GROUP BY a.id_plan'					,	'glue' => ''					)			);						/*$params = array(				'group' => 'a.id_plan'			);*/						$planes = $this->model_user->getUserPlanes( $wheres );						return $planes;		}				/*		* obtiene datos del usuario		* @return void		*/		protected function getDataUser(){						$model = new ReferidosModelUser();			$user = JFactory::getUser();						$model->instance( $user->get( 'id' ) );			$this->user_data = $model;						//obtengo el resto de la informaciÃ³n			$inf_user = $model->getUserInf();			foreach( $inf_user as $attr => $value ){								$this->user_data->$attr = $value;			}			unset( $inf );		}			/**	* funcion recursiva para generar el arbol de referidos	* @params { int este es el id del referido ; array/object es el array de referidos indirectos }	* 	*/	public function getRefRecursivo( $id_ref = NULL , $ref_indirectos = array() ){				   //var_dump( $id_ref , $ref_indirectos );				   $html_ref = '';	   		   foreach( $ref_indirectos as $key=>$indirecto ){			   if( $id_ref == $indirecto->id_referido_por ){				   $html_ref .= '<ul>							<li class="collapsed">								<div class="user-ref">									<img src="'. ( !empty($indirecto->thumb) ? $indirecto->thumb : 'images/user-Male-thumb.png') .'" alt="'. $indirecto->name .'" />									<ul>										<li><span class="user_name"><a href="index.php?option=com_referidos&task=referido.getreferidoinfo&idref='.(int) $indirecto->userid.'">'. $indirecto->name .'</a></span></li>										<li>'. $indirecto->email .'</li>										<li>'. date( 'd-m-Y' , strtotime( $indirecto->registerDate ) ) .'</li>										<li>'. $indirecto->nivel .'</li>										<li>'.( isset( $indirecto->nom_plan ) ? $indirecto->nom_plan : '' ).'</li>									</ul>							   </div>';							$this->getRefRecursivo( $indirecto->userid , $ref_indirectos);						$html_ref .= '</li></ul>'; 										echo $html_ref;			   }		   }	   }	   	   /**	   * obtengo los invitados del usuario	   */	   public function getInvitadosUser(){		   		   $model = new ReferidosModelInvitado();		   $user = JFactory::getUser();		   		   $wheres = array(		   		0 => ( object ) array(						'key' => 'id_user'					,	'condition' => ' = '						,	'value' => $user->get( 'id' )					,	'glue' => ''				)		   );		   		   $invitados = $model->getObjects( $wheres );		   		   return $invitados;	   }}