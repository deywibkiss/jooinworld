<?php defined( '_JEXEC' ) or die( 'Restricted access' );  jimport( 'joomla.application.component.controller' ); class ReferidosControllerInvitado extends JController{    	private $facebook;		/*	* obtengo la api de facebook	* @param void	* @return object facebook	*/	public function getFacebook(){				$config = array(			'appId' => '553673998062236',			'secret' => 'b5b1834721038254c154a298f2c139ce',			'status' => true,			'cookie' => false			//'allowSignedRequest' => false // optional but should be set to false for non-canvas apps		 );				$facebook = new Facebook( $config );				return $facebook;	}	  	/*	* invitar referido con post en facebook, y almacena en db	* @param void	* @return void	*/	public function invitar(){				$datas = JRequest::get( 'post' );		$user = JFactory::getUser();		$app = JFactory::getApplication();		$correos = array();				if( empty( $datas ) ){			$datas = JRequest::getVar( 'data' );		}				//var_dump( $datas ); die;				$model_invt = $this->getModel( 'invitado' );		$model_user = $this->getModel( 'user' );				$wheres = array(			0 => ( object ) array(					'key' => 'b.estado_activo'				,	'condition' => ' = '				,	'value' => '1'				,	'glue' => 'AND'				)			,			1 => ( object ) array(					'key' => 'a.estado_plan'				,	'condition' => ' = '				,	'value' => '1'				,	'glue' => 'AND'				)			,			2 => ( object ) array(					'key' => 'b.id_plan'				,	'condition' => ' = '				,	'value' => $datas[ 'plan' ]				,	'glue' => ''				)					);				$params = array(			'load' => 'loadObject'		);				//instancio la clase usuario		$model_user->instance( $user->get('id') );		$user_inf = $model_user->getUserInf(); 		foreach( $user_inf as $attr=>$valor){			$model_user->$attr = $valor;		}		$obj_plan = $model_user->getUserPlanes( $wheres , $params);				$params_send = array(				'id_user' => $model_user->userid			,	'nom_user' => $model_user->name			,	'appellidos_user' => $model_user->apellidos			,	'thumb' => $model_user->thumb			,	'from' => $datas[ 'from' ]			,	'mensaje' => $datas[ 'mensaje' ]		);				$result = ( object ) array();				/*$facebook = $this->getFacebook();		$facebook->destroySession();*/				// Get User ID		/*$user_fb = $facebook->getUser();		$session = $facebook->getAccessToken();*/				if( isset( $datas[ 'sendto' ] ) ){			$correos = str_replace( ' ', '' , $datas[ 'sendto' ] );			$correos = explode( ',', $correos );		}				$mensaje = 'Tus invitaciones han sido enviadas exitosamente';				foreach( $correos as $correo)		{			$args = array(					'id_invitado' => NULL				,	'id_user' => $user->get( 'id' )				,	'correo_invt' => $correo 				,	'nombre_invt' => NULL				,	'tipo_invt' => '1'				,	'fecha_invt' => date( 'Y-m-d H:i:s' )				,	'estado_invt' => '0'				,	'plan_invt' => $datas[ 'plan' ]			 );			 			 $model_invt->instance( $args );			 if( $model_invt->save( 'bool' ) ){				 $model_invt->sendMailInvita( $params_send );			 }else{				 $mensaje = 'Hubieron invitaciones que no se enviaron correctamente';			 }		}				//$app->setUserState( 'mensaje' , '0');		$this->setMessage( $mensaje , 'message');		$this->setRedirect( JRoute::_( 'index.php?option=com_referidos&view=invitar&Itemid=122' , false) );		return;			}		/*	* invitar referidos por facebook	*/	public function invitarFb(){				$model_invt = $this->getModel( 'invitado' );		$model_user = $this->getModel( 'user' );		$datas = JRequest::getVar( 'data' );		$user = JFactory::getUser();		$response = (object) array();		$Utilities = 'Misc';				$wheres = array(			0 => ( object ) array(					'key' => 'b.estado_activo'				,	'condition' => ' = '				,	'value' => '1'				,	'glue' => 'AND'				)			,			1 => ( object ) array(					'key' => 'a.estado_plan'				,	'condition' => ' = '				,	'value' => '1'				,	'glue' => 'AND'				)			,			2 => ( object ) array(					'key' => 'b.id_plan'				,	'condition' => ' = '				,	'value' => $datas[ 'plan' ]				,	'glue' => ''				)					);				$params = array(			'load' => 'loadObject'		);				//instancio la clase usuario		$model_user->instance( $user->get('id') );		$user_inf = $model_user->getUserInf(); 		foreach( $user_inf as $attr=>$valor){			$model_user->$attr = $valor;		}		$obj_plan = $model_user->getUserPlanes( $wheres , $params);				if( is_numeric( $datas[ 'plan' ] ) && !empty($obj_plan) ){						$args = array(					'id_invitado' => NULL				,	'id_user' => $user->get( 'id' )				,	'correo_invt' => ''				,	'nombre_invt' => NULL				,	'tipo_invt' => '2'				,	'fecha_invt' => date( 'Y-m-d H:i:s' )				,	'estado_invt' => '0'				,	'plan_invt' => $datas[ 'plan' ]			 );			 			 $model_invt->instance( $args );			 if( $model_invt->save( 'bool' ) ){				 				 $response->status = 200;				 $textencrypt = $model_invt->insertId.'_'.$model_invt->id_user.'_'.$model_invt->plan_invt;				 $response->params_invt = urlencode( $Utilities::Encrypt( $textencrypt ) );				 				 echo json_encode( $response );				 die;			 }		}				$response->status = 500;		$response->message = 'No se creo el registro de la invitación';				echo json_encode( $response );		die;	}		/**	* Redireccionamiento al formulario de registro 	* para el invitado	*/	public function setRegistrationRef(){				//obtengo los parametros del invitado codificados		$paramsref = JRequest::getVar( 'paramsref' );			$uri = JFactory::getURI();		$app = JFactory::getApplication();				$Utilities = 'Misc';		$invt_decrypt = $Utilities::Decrypt( $paramsref );		$invt_decrypt = explode( '_' , $invt_decrypt);				//si el codigo desencriptado es incorrecto, se redirecciona al home de la pagina		if( !is_numeric( $invt_decrypt[0] ) || !is_numeric( $invt_decrypt[1] ) || !is_numeric( $invt_decrypt[2] ) ){			$this->setRedirect( JRoute::_( 'index.php' , false) );			return;		}				//instancia de la clase de invitado y obtencion del registro de invitación		$model_invt = $this->getModel( 'invitado' );		$model_invt->instance( (int) $invt_decrypt[ 0 ] );				//instancia de la clase user para obtener los datos del usuario que invito		$model_user = $this->getModel( 'user' );		$model_user->instance( (int) $model_invt->id_user );		$user_inf = $model_user->getUserInf();		if(count($user_inf)){			foreach( $user_inf as $attr=>$valor ){				$model_user->$attr = $valor;			}		}				//var_dump( $model_user , $model_invt ); die;				$class_user_invt = array( $model_user , $model_invt );		$app->setUserState( 'paramsref' , serialize( $class_user_invt ) );		$this->setRedirect( JRoute::_( $uri->root().'?Itemid=246' , false) );		return;	}	}