<?php// Joomla calls and runtimesdefined( '_JEXEC' ) or die( 'Restricted access' );jimport( 'joomla.application.component.model' );// Begining of the controllerclass ReferidosModelReferido extends ReferidosModelDefault{		/**	* Object id "id_referidos_user"	* var int	*/	public $id_referidos_user;		/**	* valido = 1; no valido = 0	* var int	*/	public $estado_ref;		/**	* id "id_user_plan"	* var int	*/	public $id_user_plan;		/**	* id "id_referido"	* var int	*/	public $id_referido;		/**	* fecha en la que paso a ser referido del usuario	* var date	*/	public $fecha_registro;		/**	* id de quien lo refirio directamente	* var int	*/	public $id_referido_por;		/**	* el estado de directo o indirecto	* var int	*/	public $directo;		/**	* el estado de directo o indirecto	* var int	*/	public $nivel;		/**	* el estado de directo o indirecto	* var int	*/	public $forcomision;		/**	* el estado de directo o indirecto	* var int	*/	public $tipo_plan;		/**	* reescribir atributo	* var string	*/	public $name;			/**	 * redefined Constant for table 	 * @var string	 */	const TABLE = '#__referidos_user';		//constante base para los filtros	const FILTER_STATE = 'filter.state.referido';		/**	 * Attributes Map	 * @var array	 */	public $attrs_map = array( 			'id_referidos_user'		,	'estado_ref'			,	'id_user_plan'		,	'id_referido'		,	'fecha_registro'		,	'id_referido_por'		,	'directo'		,	'nivel'		,	'forcomision'		,	'tipo_plan'	);		/**	* Obtengo todos los datos del referido	* @params { array } array de objectos con las consultas	* @return { object } el objecto de la consultas	*/	public function getReferidoInf( $wheres = array() ){				if( !is_array($wheres) )			$wheres = array();				$db = JFactory::getDbo();		$query = $db->getQuery( true );				$query->select( '*' );		$query->from( '#__community_users AS a' );		$query->innerJoin( '#__users AS b ON a.userid = b.id' );		$query->where( 'a.userid = '.$this->id_referido , 'AND' );				//ejecuto las consultas wheres		foreach( $wheres as $key=>$obj ){						if( !is_object($obj) )				continue;						$query->where( $obj->key . $obj->condition . $obj->value , $obj->glue );			}					$db->setQuery( $query );				return $db->loadObject();			}		/**	* Obtengo todos los datos del referido	* @params { array|array} array de objectos con las consultas 	* y array de argumentos adicionales	* @return { array|object} array de objectos o objecto de las consultas	*	*/	public function getReferidoPlanes( $wheres = array() , $params = array() ){				if( !is_array($wheres) )			$wheres = array();				if( !is_array($params) )			$params = array();					$db = JFactory::getDbo();		$query = $db->getQuery( true );				$query->select( '*' );		$query->from( '#__users_planes AS a' );		$query->innerJoin( '#__planes AS b ON a.id_plan = b.id_plan' );		$query->where( 'a.id_user = '.$this->id_referido , 'AND');				//ejecuto las consultas wheres		foreach( $wheres as $key=>$obj ){						if( !is_object($obj) )				continue;						$query->where( $obj->key . $obj->condition . $obj->value , $obj->glue );			}				//order		if( isset($params[ 'order' ]) )			$query->order( $params[ 'order' ] );					//group		if( isset($params[ 'group' ]) )			$query->group( $params[ 'group' ] );					if( isset( $params[ 'limit' ] ) ){				$db->setQuery( $query , (is_numeric( $params[ 'offset' ] ))? $params[ 'offset' ] : 0  , $params[ 'limit' ] );			}else{			$db->setQuery( $query );			}				// loadObject  Or  loadObjectList		if( !isset($params[ 'load' ]) )$params[ 'load' ] = 'loadObjectList';				return $db->$params[ 'load' ]();				}}?>