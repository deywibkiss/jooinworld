<?php// Joomla calls and runtimesdefined( '_JEXEC' ) or die( 'Restricted access' );jimport( 'joomla.application.component.model' );// Begining of the controllerclass ReferidosModelUser extends ReferidosModelDefault{		/**	* Object id	* var int	*/	public $userid;		/**	* estado publicado	* var string	*/	public $status;		/**	* var int	*/	public $status_access;		/**	* var int	*/	public $points;		/**	* var date	*/	public $posted_on;		/**	* ruta de la imagen avatar	* var string	*/	public $avatar;		/**	* ruta de la imagen avatar pequeña	* var string	*/	public $thumb;		/**	* var string	*/	public $cover;		/**	* var int	*/	public $invite;		/**	* var string	*/	public $params;		/**	* var int	*/	public $view;		/**	* var string	*/	public $friends;		/**	* var string	*/	public $groups;		/**	* var string	*/	public $events;		/**	* var int	*/	public $friendcount;		/**	* var string	*/	public $alias;		/**	* reescribir atributo	* var string	*/	public $name;		/**	 * redefined Constant for table 	 * @var string	 */	const TABLE = '#__community_users';		//constante base para los filtros	const FILTER_STATE = 'filter.state.user';		/**	 * Attributes Map	 * @var array	 */	protected $attrs_map = array( 			'userid'		,	'status'		,	'status_access'		,	'points'		,	'posted_on'		,	'avatar'		,	'thumb'		,	'cover'		,	'invite'		,	'params'		,	'view'		,	'friends'		,	'groups'		,	'events'		,	'friendcount'		,	'alias'		);			/**	* Obtengo todos los datos del referido	* @params { array } array de objectos con las consultas	* @return { object } el objecto de la consultas	*/	public function getUserInf( $wheres = array() ){				if( !is_array( $wheres ) )			$wheres = array();				$db = JFactory::getDbo();		$query = $db->getQuery( true );				$query->select( '*' );		$query->from( '#__users' );		$query->where( 'id = '.$this->userid , 'AND' );				//ejecuto las consultas wheres		foreach( $wheres as $key=>$obj ){						if( !is_object($obj) )				continue;						$query->where( $obj->key . $obj->condition . $obj->value , $obj->glue );			}					$db->setQuery( $query );				return $db->loadObject();			}		/**	* Obtengo todos los datos del referido	* @params { array|array} array de objectos con las consultas 	* y array de argumentos adicionales	* @return { array|object} array de objectos o objecto de las consultas	*	*/	public function getUserPlanes( $wheres = array() , $params = array() ){				if( !is_array( $wheres ) )			$wheres = array();				if( !is_array( $params ) )				$params = array();				$db = JFactory::getDbo();		$query = $db->getQuery( true );				$query->select( '*' );		$query->from( '#__users_planes AS a' );		$query->innerJoin( '#__planes AS b ON a.id_plan = b.id_plan' );		$query->where( 'a.id_user = '.$this->userid , 'AND');				//ejecuto las consultas wheres		foreach( $wheres as $key=>$obj ){						if( !is_object($obj) )				continue;						$query->where( $obj->key . $obj->condition . $obj->value , $obj->glue );			}				//order		if( isset($params[ 'order' ]) )			$query->order( $params[ 'order' ] );					//group		if( isset($params[ 'group' ]) )			$query->group( $params[ 'group' ] );					if( isset( $params[ 'limit' ] ) ){				$db->setQuery( $query , (is_numeric( $params[ 'offset' ] ))? $params[ 'offset' ] : 0  , $params[ 'limit' ] );			}else{			$db->setQuery( $query );			}				// loadObject  Or  loadObjectList		if( !isset($params[ 'load' ]) )$params[ 'load' ] = 'loadObjectList';				return $db->$params[ 'load' ]();				}		/**	* 	* @params { array consulta; array parametros de la consulta }	* @return object	*/	/*public function getUserAll( $where , $params ){				$db = JFactory::getDbo();		$query = $db->getQuery( true );				$query->select( '*' );		$query->from( self::TABLE.' AS a' );		$query->innerJoin( '#__users AS b ON a.userid = b.id' );		$query->innerJoin( '#__users_planes AS c ON a.userid = c.id_user' );			foreach( $where as $key=>$obj){						if( !is_object($obj) )				continue;						$consulta = $obj->key . $obj->condition . $obj->value . $obj->glue;			$query->where( $consulta );		}				// Order ASC default		if( isset( $params[ 'order' ] ) )			$query->order( $params[ 'order' ] );					// Group by			if( isset( $params[ 'group' ] ) )				$query->group( $params[ 'group' ] );					$db->setQuery( $query );					// loadObject  Or  loadObjectList		if( !isset($params[ 'load' ]) )			$params[ 'load' ] = 'loadObject';				return $db->$params[ 'load' ]();				}*/	}?>